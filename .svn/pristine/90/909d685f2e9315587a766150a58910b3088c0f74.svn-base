package br.com.renovar.modelo;

// Generated 26/01/2015 17:02:57 by Hibernate Tools 4.3.1

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

import br.com.renovar.modelo.Atualizacao;
import br.com.renovar.modelo.Atendimento;

/**
 * Cliente generated by hbm2java
 */
@Entity
@Table(name = "CLIENTE", catalog = "renovar")
public class Cliente implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -534513008549345325L;
	private int pesId;
	private Pessoa pessoa;
	private String cliModulo;
	private String cliSituacao;
	private Set<Historico> historicos = new HashSet<Historico>(0);
	private Set<Atendimento> atendimentos = new HashSet<Atendimento>(0);
	private Set<Visita> visitas = new HashSet<Visita>(0);
	private Set<Atualizacao> atualizacaos = new HashSet<Atualizacao>(0);

	public Cliente() {
	}

	public Cliente(Pessoa pessoa, String cliSituacao) {
		this.pessoa = pessoa;
		this.cliSituacao = cliSituacao;
	}

	public Cliente(Pessoa pessoa, String cliModulo, String cliSituacao,
			Set<Atendimento> atendimentos,Set<Historico> historicos, Set<Visita> visitas,
			Set<Atualizacao> atualizacaos) {
		this.pessoa = pessoa;
		this.cliModulo = cliModulo;
		this.cliSituacao = cliSituacao;
		this.historicos = historicos;
		this.atendimentos = atendimentos;
		this.visitas = visitas;
		this.atualizacaos = atualizacaos;
	}

	@GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "pessoa"))
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "PES_ID", unique = true, nullable = false)
	public int getPesId() {
		return this.pesId;
	}

	public void setPesId(int pesId) {
		this.pesId = pesId;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public Pessoa getPessoa() {
		return this.pessoa;
	}

	public void setPessoa(Pessoa pessoa) {
		this.pessoa = pessoa;
	}

	@Column(name = "CLI_MODULO", length = 80)
	public String getCliModulo() {
		return this.cliModulo;
	}

	public void setCliModulo(String cliModulo) {
		this.cliModulo = cliModulo;
	}

	@Column(name = "CLI_SITUACAO", nullable = false, length = 50)
	public String getCliSituacao() {
		return this.cliSituacao;
	}

	public void setCliSituacao(String cliSituacao) {
		this.cliSituacao = cliSituacao;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "cliente")
	public Set<Historico> getHistoricos() {
		return this.historicos;
	}

	public void setHistoricos(Set<Historico> historicos) {
		this.historicos = historicos;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "cliente")
	public Set<Atendimento> getAtendimentos() {
		return this.atendimentos;
	}

	public void setAtendimentos(Set<Atendimento> atendimentos) {
		this.atendimentos = atendimentos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "cliente")
	public Set<Visita> getVisitas() {
		return this.visitas;
	}

	public void setVisitas(Set<Visita> visitas) {
		this.visitas = visitas;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "cliente")
	public Set<Atualizacao> getAtualizacaos() {
		return this.atualizacaos;
	}

	public void setAtualizacaos(Set<Atualizacao> atualizacaos) {
		this.atualizacaos = atualizacaos;
	}

	public static long getSerialversionuid() {
		return serialVersionUID;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result
				+ ((atendimentos == null) ? 0 : atendimentos.hashCode());
		result = prime * result
				+ ((atualizacaos == null) ? 0 : atualizacaos.hashCode());
		result = prime * result
				+ ((cliModulo == null) ? 0 : cliModulo.hashCode());
		result = prime * result
				+ ((cliSituacao == null) ? 0 : cliSituacao.hashCode());
		result = prime * result
				+ ((historicos == null) ? 0 : historicos.hashCode());
		result = prime * result + pesId;
		result = prime * result + ((pessoa == null) ? 0 : pessoa.hashCode());
		result = prime * result + ((visitas == null) ? 0 : visitas.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Cliente other = (Cliente) obj;
		if (atendimentos == null) {
			if (other.atendimentos != null)
				return false;
		} else if (!atendimentos.equals(other.atendimentos))
			return false;
		if (atualizacaos == null) {
			if (other.atualizacaos != null)
				return false;
		} else if (!atualizacaos.equals(other.atualizacaos))
			return false;
		if (cliModulo == null) {
			if (other.cliModulo != null)
				return false;
		} else if (!cliModulo.equals(other.cliModulo))
			return false;
		if (cliSituacao == null) {
			if (other.cliSituacao != null)
				return false;
		} else if (!cliSituacao.equals(other.cliSituacao))
			return false;
		if (historicos == null) {
			if (other.historicos != null)
				return false;
		} else if (!historicos.equals(other.historicos))
			return false;
		if (pesId != other.pesId)
			return false;
		if (pessoa == null) {
			if (other.pessoa != null)
				return false;
		} else if (!pessoa.equals(other.pessoa))
			return false;
		if (visitas == null) {
			if (other.visitas != null)
				return false;
		} else if (!visitas.equals(other.visitas))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "Cliente [pesId=" + pesId + "]";
	}

}
