package br.com.renovar.modelo;

// Generated 16/01/2015 15:33:10 by Hibernate Tools 4.3.1

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.ElementCollection;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

import br.com.renovar.modelo.Visita;
import br.com.renovar.modelo.Atendimento;

/**
 * Funcionario generated by hbm2java
 */
@Entity
@Table(name = "FUNCIONARIO", catalog = "renovar")
public class Funcionario implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 2689227805735315577L;
	private int pesId;
	private Pessoa pessoa;
	private String funSenha;
	private String funLoguin;
	private Boolean funAtivo;
	private String funCargo;
	private Set<String> permissao=new HashSet<String>();
	private Set<Visita> visitas = new HashSet<Visita>(0);
	private Set<Atendimento> atendimentos = new HashSet<Atendimento>(0);

	public Funcionario() {
	}

	public Funcionario(Pessoa pessoa) {
		this.pessoa = pessoa;
	}

	public Funcionario(Pessoa pessoa, String funSenha, String funLoguin,
			Boolean funAtivo,Set<String> permissao, String funCargo, Set<Visita> visitas
			, Set<Atendimento> atendimentos) {
		this.pessoa = pessoa;
		this.funSenha = funSenha;
		this.funLoguin = funLoguin;
		this.funAtivo = funAtivo;
		this.permissao=permissao;		
		this.funCargo = funCargo;
		this.visitas = visitas;
		this.atendimentos = atendimentos;
	}

	@GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "pessoa"))
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "PES_ID", unique = true, nullable = false)
	public int getPesId() {
		return this.pesId;
	}

	public void setPesId(int pesId) {
		this.pesId = pesId;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public Pessoa getPessoa() {
		return this.pessoa;
	}

	public void setPessoa(Pessoa pessoa) {
		this.pessoa = pessoa;
	}

	@Column(name = "FUN_SENHA", length = 90)
	public String getFunSenha() {
		return this.funSenha;
	}

	public void setFunSenha(String funSenha) {
		this.funSenha = funSenha;
	}

	@Column(name = "FUN_LOGUIN", length = 190)
	public String getFunLoguin() {
		return this.funLoguin;
	}

	public void setFunLoguin(String funLoguin) {
		this.funLoguin = funLoguin;
	}

	@Column(name = "FUN_ATIVO")
	public Boolean getFunAtivo() {
		return this.funAtivo;
	}

	public void setFunAtivo(Boolean funAtivo) {
		this.funAtivo = funAtivo;
	}
	
	@ElementCollection(targetClass = String.class)
	@JoinTable(
	           name = "FUNCIONARIO_PERMISSAO", 
			     uniqueConstraints = {@UniqueConstraint(columnNames = {"FUNCIONARIO", "PERMISSAO"})}, 
			     joinColumns = @JoinColumn(name = "FUNCIONARIO"))
	@Column(name = "PERMISSAO", length = 600)
	public Set<String> getPermissao() {
		return permissao;
	}

	public void setPermissao(Set<String> permissao) {
		this.permissao = permissao;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "funcionario")
	public Set<Visita> getVisitas() {
		return this.visitas;
	}

	public void setVisitas(Set<Visita> visitas) {
		this.visitas = visitas;
	}

	public static long getSerialversionuid() {
		return serialVersionUID;
	}
	
	@Column(name = "FUN_CARGO", length = 90)
	public String getFunCargo() {
		return this.funCargo;
	}

	public void setFunCargo(String funCargo) {
		this.funCargo = funCargo;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "funcionario")
	public Set<Atendimento> getAtendimentos() {
		return this.atendimentos;
	}

	public void setAtendimentos(Set<Atendimento> atendimentos) {
		this.atendimentos = atendimentos;
	}


	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result
				+ ((atendimentos == null) ? 0 : atendimentos.hashCode());
		result = prime * result
				+ ((funAtivo == null) ? 0 : funAtivo.hashCode());
		result = prime * result
				+ ((funCargo == null) ? 0 : funCargo.hashCode());
		result = prime * result
				+ ((funLoguin == null) ? 0 : funLoguin.hashCode());
		result = prime * result
				+ ((funSenha == null) ? 0 : funSenha.hashCode());
		result = prime * result
				+ ((permissao == null) ? 0 : permissao.hashCode());
		result = prime * result + pesId;
		result = prime * result + ((pessoa == null) ? 0 : pessoa.hashCode());
		result = prime * result + ((visitas == null) ? 0 : visitas.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Funcionario other = (Funcionario) obj;
		if (atendimentos == null) {
			if (other.atendimentos != null)
				return false;
		} else if (!atendimentos.equals(other.atendimentos))
			return false;
		if (funAtivo == null) {
			if (other.funAtivo != null)
				return false;
		} else if (!funAtivo.equals(other.funAtivo))
			return false;
		if (funCargo == null) {
			if (other.funCargo != null)
				return false;
		} else if (!funCargo.equals(other.funCargo))
			return false;
		if (funLoguin == null) {
			if (other.funLoguin != null)
				return false;
		} else if (!funLoguin.equals(other.funLoguin))
			return false;
		if (funSenha == null) {
			if (other.funSenha != null)
				return false;
		} else if (!funSenha.equals(other.funSenha))
			return false;
		if (permissao == null) {
			if (other.permissao != null)
				return false;
		} else if (!permissao.equals(other.permissao))
			return false;
		if (pesId != other.pesId)
			return false;
		if (pessoa == null) {
			if (other.pessoa != null)
				return false;
		} else if (!pessoa.equals(other.pessoa))
			return false;
		if (visitas == null) {
			if (other.visitas != null)
				return false;
		} else if (!visitas.equals(other.visitas))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "Funcionario [pesId=" + pesId + "]";
	}

}
